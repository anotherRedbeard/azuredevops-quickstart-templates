# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main
  paths:
    include:
    - logicapps-standard

pool:
  vmImage: ubuntu-latest

variables:
  ARCHIVE_FOLDER: 'archive'
  SERVICE_CONNECTION: 'QuickStartTemplates-AzureServiceConnection'
  LOGIC_APP_NAME: 'stateless'
  RESOURCE_GROUP_NAME: 'red-cus-demo-rg'
  LOCATION_NAME: 'centralus'
  LOCATION_PREFIX: 'cus'
  LASTD_TEMPLATE_FILE_LOCATION: '$(System.ArtifactsDirectory)/app-iac/logicapps-standard/iac/main.bicep'
  RUNTIME_URL: ''

stages:
- stage: Build
  displayName: Build and create artifact

  jobs:
  - job: Build
    displayName: Build
    steps:
    
    - task: CopyFiles@2
      displayName: Copy Source Files
      inputs:
        Contents: |
          **/logicapps-standard/**/*
          !logicapps-standard/.*/**/*
          !logicapps-standard/.*
          !logicapps-standard/azure-pipelines*
          !**/iac/**/*
        TargetFolder: $(ARCHIVE_FOLDER)/src

    - task: CopyFiles@2
      displayName: Copy IAC Files
      inputs:
        Contents: |
          **/logicapps-standard/iac/*
        TargetFolder: $(ARCHIVE_FOLDER)/iac

    # Move the dev connections file to overwrite the connections file
    - script: |
          mv $(ARCHIVE_FOLDER)/src/logicapps-standard/src/connections.dev.json $(ARCHIVE_FOLDER)/src/logicapps-standard/src/connections.json
      displayName: 'Moving dev connections/parameters'
      
    # Archive everything in the 'zip' folder
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: $(ARCHIVE_FOLDER)/src/logicapps-standard/src
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-dev.zip'

    # Move the prd connections file to overwrite the connections file
    - script: |
          mv $(ARCHIVE_FOLDER)/src/logicapps-standard/src/connections.prd.json $(ARCHIVE_FOLDER)/src/logicapps-standard/src/connections.json
      displayName: 'Moving prd connections/parameters'
      
    # Archive everything in the 'zip' folder
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: $(ARCHIVE_FOLDER)/src/logicapps-standard/src
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-prd.zip'

    - task: PublishPipelineArtifact@1
      displayName: Publish dev artifacts zip
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-dev.zip'
        artifact: 'app-src-dev'
        publishLocation: 'pipeline'

    - task: PublishPipelineArtifact@1
      displayName: Publish prd artifacts zip
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-prd.zip'
        artifact: 'app-src-prd'
        publishLocation: 'pipeline'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(ARCHIVE_FOLDER)/iac'
        artifact: 'app-iac'
        publishLocation: 'pipeline'

- stage: DevDeploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    managedApiConnections.connectionRuntimeUrl: '$(RUNTIME_URL)'
  jobs:
  - deployment: 'DeploytoDev'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
            # download all artifacts 
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                downloadPath: '$(System.ArtifactsDirectory)'

            # run Azure CLI command to deploy bicep template
            - task: AzureCLI@2
              displayName: Deploy Bicep file
              inputs:
                azureSubscription: $(SERVICE_CONNECTION)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az --version
                  az group create --name $(RESOURCE_GROUP_NAME)-dev --location $(LOCATION_NAME)
                  az deployment group create --resource-group $(RESOURCE_GROUP_NAME)-dev --template-file $(LASTD_TEMPLATE_FILE_LOCATION) --parameters logic_app_name=$(LOGIC_APP_NAME) location_prefix=$(LOCATION_PREFIX) environment=dev
                  echo "##vso[task.setvariable variable=PROVISIONED_LA_NAME]$(az deployment group show --resource-group $(RESOURCE_GROUP_NAME)-dev --name main  --query properties.outputs.logic_app.value  --output tsv)"
                  echo "##vso[task.setvariable variable=RUNTIME_URL]$(az deployment group show --resource-group $(RESOURCE_GROUP_NAME)-dev --name main  --query properties.outputs.connectionRuntimeUrl.value  --output tsv)"

            # update connections.json via FileTransorm tsk using variables
            - task: FileTransform@1
              displayName: 'File transformation: connections.json'
              inputs:
                folderPath: '$(System.ArtifactsDirectory)/app-src-dev/*-dev.zip'
                targetFiles: '**/connections.json'
                fileType: json

            # deploy zip to app service
            - task: AzureFunctionApp@1  
              displayName: Deploy Logic App
              inputs:
                azureSubscription: $(SERVICE_CONNECTION)
                appType: 'workflowapp'
                appName: $(PROVISIONED_LA_NAME)
                package: '$(System.ArtifactsDirectory)/app-src-dev/*-dev.zip'
                deploymentMethod: 'zipDeploy'


- stage: ProdDeploy
  displayName: Deploy to Prod
  dependsOn: DevDeploy
  jobs:
  - deployment: 'DeploytoPrd'
    environment: 'prd'
    strategy:
      runOnce:
        deploy:
          steps:

            # download all artifacts 
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                downloadPath: '$(System.ArtifactsDirectory)'

            # run Azure CLI command to deploy bicep template
            - task: AzureCLI@2
              displayName: Deploy Bicep file
              inputs:
                azureSubscription: $(SERVICE_CONNECTION)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az --version
                  az group create --name $(RESOURCE_GROUP_NAME)-prd --location $(LOCATION_NAME)
                  az deployment group create --resource-group $(RESOURCE_GROUP_NAME)-prd --template-file $(LASTD_TEMPLATE_FILE_LOCATION) --parameters logic_app_name=$(LOGIC_APP_NAME) location_prefix=$(LOCATION_PREFIX) environment=prd
                  echo "##vso[task.setvariable variable=PROVISIONED_LA_NAME]$(az deployment group show --resource-group $(RESOURCE_GROUP_NAME)-prd --name main  --query properties.outputs.logic_app.value  --output tsv)"
                  echo "##vso[task.setvariable variable=RUNTIME_URL]$(az deployment group show --resource-group $(RESOURCE_GROUP_NAME)-prd --name main  --query properties.outputs.connectionRuntimeUrl.value  --output tsv)"

            # deploy zip to app service
            - task: AzureFunctionApp@1  
              inputs:
                azureSubscription: $(SERVICE_CONNECTION)
                appType: 'workflowapp'
                appName: $(PROVISIONED_LA_NAME)
                package: '$(System.ArtifactsDirectory)/app-src-prd/*-prd.zip'
                deploymentMethod: 'zipDeploy'