# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main
  paths:
    include:
    - logicapps-standard

pool:
  vmImage: ubuntu-latest

variables:
  ARCHIVE_FOLDER: 'archive'
  SERVICE_CONNECTION: 'QuickStartTemplates-AzureServiceConnection'
  LOGIC_APP_NAME: 'red-scus-statelessdemo-la'
  RESOURCE_GROUP_NAME: 'red-scus-logicappdemo-rg'
  LOCTION_NAME: 'southcentralus'
  LASTD_TEMPLATE_FILE_LOCATION: '$(System.ArtifactsDirectory)/logicapps-standard/iac/logic-app-std.bicep'

stages:
- stage: Build
  displayName: Build and create artifact
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: CopyFiles@2
      displayName: Copy Source Files
      inputs:
        Contents: |
          **/logicapps-standard/*
          !.*/**/*
          !.*
          !azure-pipelines*
          !**/iac/**/*
        TargetFolder: $(ARCHIVE_FOLDER)/src

    - task: CopyFiles@2
      displayName: Copy IAC Files
      inputs:
        Contents: |
          **/logicapps-standard/iac/*
        TargetFolder: $(ARCHIVE_FOLDER)/iac

    # Archive everything in the 'zip' folder
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: $(ARCHIVE_FOLDER)/src
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
  
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifact: 'StdLogicApp/src'
        publishLocation: 'pipeline'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(ARCHIVE_FOLDER)/iac'
        artifact: 'StdLogicApp/iac'
        publishLocation: 'pipeline'

- stage: DevDeploy
  displayName: Deploy to Dev
  dependsOn: Build
  jobs:
  - deployment: 'DeploytoDev'
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
            # download all artifacts 
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                downloadPath: '$(System.ArtifactsDirectory)'

            # run Azure CLI command to deploy bicep template
            - task: AzureCLI@2
              inputs:
                azureSubscription: $(SERVICE_CONNECTION)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  echo '$(Pipeline.Workspace)'
                  ls -ltra $(Pipeline.Workspace)
                  echo '$(System.ArtifactsDirectory)'
                  ls -ltra $(System.ArtifactsDirectory)
                  echo '$(Pipeline.Workspace)/StdLogicAppIAC'
                  ls -ltra $(Pipeline.Workspace)/StdLogicAppIAC
                  echo '$(System.DefaultWorkingDirectory)'
                  ls -ltra $(System.DefaultWorkingDirectory)
                  ls -ltra $(Build.SourcesDirectory)/logicapps-standard/iac
                  az --version
                  az group create --name $(RESOURCE_GROUP_NAME)-dev --location $(LOCTION_NAME)
                  az deployment group create --resource-group $(RESOURCE_GROUP_NAME)-dev --template-file $(System.ArtifactsDirectory)/StdLogicApp/iac/logicapps-standard/iac/logic-app-std.bicep

            # deploy zip to app service
            - task: AzureFunctionApp@1  
              inputs:
                azureSubscription: $(SERVICE_CONNECTION)
                appType: 'workflowapp'
                appName: $(LOGIC_APP_NAME)-dev
                package: '$(System.ArtifactsDirectory)/src/*.zip'
                deploymentMethod: 'zipDeploy'


- stage: ProdDeploy
  displayName: Deploy to Prod
  dependsOn: DevDeploy
  jobs:
  - deployment: 'DeploytoDev'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:

            # download all artifacts 
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                downloadPath: '$(System.ArtifactsDirectory)'

            # deploy zip to app service
            - task: AzureFunctionApp@1  
              inputs:
                azureSubscription: $(SERVICE_CONNECTION)
                appType: 'workflowapp'
                appName: $(LOGIC_APP_NAME)-prd
                package: '$(System.ArtifactsDirectory)/*.zip'
                deploymentMethod: 'zipDeploy'